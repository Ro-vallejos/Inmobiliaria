@model _net_integrador.Models.Contrato

@{
    ViewData["Title"] = "Editar Contrato";
}

<div class="container mt-4">
    <h2>Editar Contrato</h2>
    <div>
        <a href="@Url.Action("Index")" class="btn btn-secondary">Volver</a>
    </div>

    <form asp-action="Editar" method="post" class="mt-4">
        @* Campos Ocultos Esenciales *@
        @Html.HiddenFor(m => m.id)
        @Html.HiddenFor(m => m.estado)
        @Html.HiddenFor(m=> m.id_inquilino)
        @Html.HiddenFor(m=> m.id_inmueble)

        @* Campo Oculto CLAVE: Aquí se guarda la fecha de fin calculada por JS para enviarla al POST *@
        @Html.HiddenFor(m => m.fecha_fin, new { id = "fechaFinHidden" })

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        
        <hr />
        <h4>Datos del contrato</h4>

        @* Datos del Inquilino (Visualización) *@
        <div class="form-group mb-3">
            <label asp-for="id_inquilino" class="control-label">Inquilino</label>
            <table class="table table-bordered mt-2">
                <thead>
                    <tr>
                        <th>Nombre completo</th>
                        <th>DNI</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Model.Inquilino?.NombreCompleto</td>
                        <td>@Model.Inquilino?.dni</td>
                    </tr>
                </tbody>
            </table>
        </div>

        @* Datos del Inmueble (Visualización) *@
        <div class="form-group mb-3">
            @Html.LabelFor(m => m.Inmueble,"Inmueble")
            <table class="table table-bordered mt-2">
                <thead>
                    <tr>
                        <th>Direccion</th>
                        <th>Cantidad de ambientes</th>
                        <th>Precio </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Model.Inmueble?.direccion.ToString()</td>
                        <td>@Model.Inmueble?.ambientes.ToString()</td>
                        <td>@Model.Inmueble?.precio?.ToString("C", new System.Globalization.CultureInfo("es-AR"))</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <hr />
        <h4>Período y Monto</h4>
        
        @* Fecha de Inicio (Solo lectura) *@
        <div class="form-group mb-3">
            @Html.LabelFor(m => m.fecha_inicio,"Fecha de Inicio (No editable)")
            @Html.TextBoxFor(m => m.fecha_inicio, format: "{0:yyyy-MM-dd}", new { 
                @class = "form-control", 
                @readonly = "readonly", 
                type="date", 
                id="fechaInicio" 
            })
        </div>

        @* Duración en Meses (Editable) *@
      <div class="form-group mb-3" >
    @* Usamos la clase Bootstrap 'text-danger' para el texto en rojo *@
    @Html.LabelFor(m => m.DuracionEnMeses, "Seleccione la nueva duración del contrato en meses", new { @class = "control-label text-danger" })
    
    @Html.TextBoxFor(m => m.DuracionEnMeses, new {
        // Agregamos la clase Bootstrap 'border-danger' para un borde rojo
        @class = "form-control border-danger",
        type = "number",
        min = "1",
        id = "duracionMeses"
    })
    @Html.ValidationMessageFor(m => m.DuracionEnMeses, "", new { @class = "text-danger" })
</div>
        
        @* Fecha Final Calculada (Solo visualización) *@
        <div class="form-group mb-3">
            <label class="control-label">Fecha Final Calculada</label>
            <input type="text" id="fechaFinDisplay" class="form-control" readonly value="" />
            @* Muestra el mensaje de error de solapamiento si existe *@
            @Html.ValidationMessageFor(m => m.fecha_fin, "", new { @class = "text-danger" })
        </div>


        @* Monto Mensual *@
        <div class="form-group mt-2">
            <label for="monto_mensual">Monto Mensual</label>
            <input asp-for="monto_mensual" class="form-control" readonly />
            <span asp-validation-for="monto_mensual" class="text-danger"></span>
        </div>

        <div class="form-gropu mt-2">
            <button type="submit" class="btn btn-primary mt-3">Guardar Cambios</button>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(function () {
            var $fechaInicio = $('#fechaInicio');
            var $duracionMeses = $('#duracionMeses');
            var $fechaFinHidden = $('#fechaFinHidden');
            var $fechaFinDisplay = $('#fechaFinDisplay');

            function calcularFechaFin() {
                var inicioStr = $fechaInicio.val();
                var mesesStr = $duracionMeses.val();
                var meses = parseInt(mesesStr);

                if (inicioStr.length === 0 || isNaN(meses) || meses <= 0) {
                    $fechaFinDisplay.val("Ingrese duración válida");
                    $fechaFinHidden.val('');
                    return;
                }

                // Usamos 'T00:00:00' para forzar la interpretación como fecha local y evitar problemas de zona horaria.
                var fecha = new Date(inicioStr + 'T00:00:00'); 

                if (isNaN(fecha.getTime())) {
                    $fechaFinDisplay.val("Fecha de inicio inválida.");
                    $fechaFinHidden.val('');
                    return;
                }
                
                // Crea una copia de la fecha de inicio y agrega los meses
                var fechaFin = new Date(fecha.getTime()); 
                fechaFin.setMonth(fechaFin.getMonth() + meses);

                // Formateo de la fecha final
                var dia = String(fechaFin.getDate()).padStart(2, '0');
                var mes = String(fechaFin.getMonth() + 1).padStart(2, '0');
                var anio = fechaFin.getFullYear();

                // Formato para el usuario (dd/MM/yyyy)
                var fechaFinalDisplay = `${dia}/${mes}/${anio}`;
                // Formato para el servidor (yyyy-MM-dd)
                var fechaFinalHidden = `${anio}-${mes}-${dia}`;
                
                $fechaFinDisplay.val(fechaFinalDisplay);
                $fechaFinHidden.val(fechaFinalHidden);
            }

            // Asignar eventos para disparar el cálculo
            $duracionMeses.on('input', calcularFechaFin);
            
            // Ejecutar al cargar la página para precargar la fecha de fin actual
            calcularFechaFin(); 
        });
    </script>
}